import re

def assess_password_strength(password):
    # Criteria for a strong password
    length_criteria = len(password) >= 8
    uppercase_criteria = re.search(r'[A-Z]', password) is not None
    lowercase_criteria = re.search(r'[a-z]', password) is not None
    digit_criteria = re.search(r'\d', password) is not None
    special_character_criteria = re.search(r'[!@#$%^&*(),.?":{}|<>]', password) is not None

    # Determine strength
    strength_score = sum([length_criteria, uppercase_criteria, lowercase_criteria,
                          digit_criteria, special_character_criteria])
    
    # Feedback based on the strength score
    if strength_score == 5:
        strength = "Very Strong"
        feedback = "Great job! Your password meets all criteria."
    elif strength_score == 4:
        strength = "Strong"
        feedback = "Good! Just a little more complexity would make it even better."
    elif strength_score == 3:
        strength = "Moderate"
        feedback = "Not bad, but consider adding more complexity for better security."
    elif strength_score == 2:
        strength = "Weak"
        feedback = "Your password is quite weak. Please improve it by adding more types of characters."
    else:
        strength = "Very Weak"
        feedback = "Your password is very weak. Use a mix of letters, numbers, and special characters."

    return strength, feedback

# Example usage
password = input("Enter a password to assess its strength: ")
strength, feedback = assess_password_strength(password)
print(f"Password Strength: {strength}\nFeedback: {feedback}")
